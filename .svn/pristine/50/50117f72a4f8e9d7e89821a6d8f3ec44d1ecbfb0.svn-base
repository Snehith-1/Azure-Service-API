//using System;
//using System.Collections.Generic;
//using System.Linq;
//using System.Web;

//namespace ems.pmr.DataAccess
//{
//    public class DaPmrTrnRaiseEnquiry
//    {
//    }
//}

using ems.utilities.Functions;
using System;
using System.Collections.Generic;
using System.Data.Odbc;
using System.Data;
using System.Linq;
using System.Web;
using ems.pmr.Models;
using System.Reflection;
using MySql.Data.MySqlClient;

namespace ems.pmr.DataAccess
{
    public class DaPmrTrnRaiseEnquiry
    {
        dbconn objdbconn = new dbconn();
        cmnfunctions objcmnfunctions = new cmnfunctions();
        HttpPostedFile httpPostedFile;
        string msSQL = string.Empty;
        MySqlDataReader objMySqlDataReader;
        DataTable dt_datatable;
        string msEmployeeGID, lsemployee_gid, lsentity_code, lsdesignation_code, lsCode, msPOGetGID, msGetGID, msGetGid, msGetGid1;
        int mnResult, mnResult1, mnResult2, mnResult3, mnResult4, mnResult5, lsenquiry_type, product_requireddate;

        public void DaGetProductGrp(MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = " select distinct(a.productgroup_gid),b.productgroup_name " +
                " from pmr_mst_tproduct a," +
                " pmr_mst_tproductgroup b where a.productgroup_gid=b.productgroup_gid  and b.delete_flag='N' " +
                " order by b.productgroup_name ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetProductGrp>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetProductGrp
                    {
                        productgroup_name = dt["productgroup_name"].ToString(),
                        productgroup_gid = dt["productgroup_gid"].ToString(),
                    });
                    values.GetProductGrp = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetProducts(MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = "select product_gid,product_name from pmr_mst_tproduct" +
                " where product_name = product_name  and delete_flag='N'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetProducts>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetProducts
                    {
                        product_name = dt["product_name"].ToString(),
                        product_gid = dt["product_gid"].ToString(),
                    });
                    values.GetProducts = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void DaGetProductunit(MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = " Select a.productuom_gid as uom_gid, a.productuom_name " +
               " from pmr_mst_tproductuom a " +
               " where a.delete_flag='N' and a.productuomclass_gid in (select productuomclass_gid from pmr_mst_tproduct where delete_flag='N' ) ";


            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetProductUnits>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetProductUnits
                    {
                        productuom_name = dt["productuom_name"].ToString(),
                        uom_gid = dt["uom_gid"].ToString(),
                    });
                    values.GetProductUnits = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetOnChangeProductsName(string product_gid, MdlPmrTrnRaiseEnquiry values)
        {

            if (product_gid != null)
            {
                msSQL = " Select a.product_name, a.product_code, b.productuom_gid,b.productuom_name,c.productgroup_name,c.productgroup_gid,a.productuom_gid  from pmr_mst_tproduct a  " +
                     " left join pmr_mst_tproductuom b on a.productuom_gid = b.productuom_gid  " +
                    " left join pmr_mst_tproductgroup c on a.productgroup_gid = c.productgroup_gid  " +
                " where a.product_gid='" + product_gid + "' ";
                dt_datatable = objdbconn.GetDataTable(msSQL);

                var getModuleList = new List<GetProductsName>();
                if (dt_datatable.Rows.Count != 0)
                {
                    foreach (DataRow dt in dt_datatable.Rows)
                    {
                        getModuleList.Add(new GetProductsName
                        {
                            product_name = dt["product_name"].ToString(),
                            product_code = dt["product_code"].ToString(),
                            productuom_name = dt["productuom_name"].ToString(),
                            productgroup_name = dt["productgroup_name"].ToString(),
                            productuom_gid = dt["productuom_gid"].ToString(),
                            productgroup_gid = dt["productgroup_gid"].ToString(),

                        });
                        values.GetProductsName = getModuleList;
                    }
                }
            }
            else
            {

            }
        }
        public void DaGetDirectEnquiryEditProductSummary(string tmpsalesenquiry_gid, MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = " Select a.tmpsalesenquiry_gid,a.enquiry_gid,a.product_gid,a.qty_requested,a.uom_gid,a.productgroup_gid,a.potential_value," +
                    " DATE_FORMAT(a.product_requireddate, '%d/%m/%Y') AS product_requireddate," +
                    " c.product_name, c.product_code,b.productgroup_name,d.productuom_name from pmr_tmp_tvendorenquiry a" +
                    " left join pmr_mst_tproductgroup b on a.productgroup_gid = b.productgroup_gid " +
                    " left join pmr_mst_tproduct c on a.product_gid = c.product_gid" +
                    " left join pmr_mst_tproductuom d on a.uom_gid = c.productuom_gid " +
                    " where a.tmpsalesenquiry_gid = '" + tmpsalesenquiry_gid + "'";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<DirecteditenquiryList>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new DirecteditenquiryList
                    {
                        tmpsalesenquiry_gid = dt["tmpsalesenquiry_gid"].ToString(),
                        product_gid = dt["product_gid"].ToString(),
                        product_name = dt["product_name"].ToString(),
                        productuom_name = dt["productuom_name"].ToString(),
                        productgroup_name = dt["productgroup_name"].ToString(),
                        productgroup_gid = dt["productgroup_gid"].ToString(),
                        qty_requested = dt["qty_requested"].ToString(),
                        product_code = dt["product_code"].ToString(),
                        potential_value = dt["potential_value"].ToString(),
                        product_requireddate = dt["product_requireddate"].ToString(),

                    });
                    values.directeditenquiry_list = getModuleList;
                }
            }
        }
        public void DaPostUpdateEnquiryProduct(string employee_gid, productsummarys_list values)
        {



            msSQL = "Select product_gid from pmr_mst_tproduct where product_name='" + values.product_name + "'";
            string lsproductgid = objdbconn.GetExecuteScalar(msSQL);

            msSQL = "Select productgroup_gid from pmr_mst_tproductgroup where productgroup_name='" + values.productgroup_name + "'";
            string lsproductgroupgid = objdbconn.GetExecuteScalar(msSQL);

            msSQL = "Select productuom_gid from pmr_mst_tproductuom where productuom_name='" + values.productuom_name + "'";
            string lsproductuomgid = objdbconn.GetExecuteScalar(msSQL);

            msSQL = " update smr_tmp_tsalesenquiry set " +
                    " productgroup_gid = '" + lsproductgroupgid + "', " +
                    " potential_value ='" + values.potential_value + "', " +
                    " qty_requested='" + values.qty_requested + "', " +
                    " uom_gid='" + lsproductuomgid + "'," +
                    " product_gid='" + lsproductgid + "'," +
                    " product_requireddate = '" + values.product_requireddate + "'," +
                    " created_by= '" + employee_gid + "'," +
                    " enquiry_type= '" + lsenquiry_type + "'," +
                    " where tmpsalesenquiry_gid='" + values.tmpsalesenquiry_gid + "'";
            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

            msSQL = " select qty_requested,display_field,customerproduct_code,potential_value,tmpsalesenquiry_gid " +
                   " from smr_tmp_tsalesenquiry where " +
                   " product_gid = '" + lsproductgid + "' and " +
                   " uom_gid='" + lsproductuomgid + "' and  " +
                   " created_by = '" + employee_gid + "' and" +
                   " enquiry_type='" + lsenquiry_type + "' and product_requireddate='" + (product_requireddate, "yyyy-MM-dd") + "'";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            if (dt_datatable.Rows.Count >= 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    string lsqtyrequested = dt["qty_requested"].ToString();
                    string lspotentialvalue = dt["potential_value"].ToString();

                    msSQL = " update smr_tmp_tsalesenquiry set " +
                            " qty_requested='" + lsqtyrequested + "', " +
                            " potential_value ='" + lspotentialvalue + "' " +
                            " where tmpsalesenquiry_gid='" + values.tmpsalesenquiry_gid + "' ";
                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                }
            }

            if (mnResult != 0)
            {
                values.status = true;
                values.message = " Product Updated Successfully ";
            }
            else
            {
                values.status = false;
                values.message = " Error While Updating Product Details ";
            }
        }


        public void DaPostOnAdds(string user_gid, productsummarys_list values)
        {
            msGetGid = objcmnfunctions.GetMasterGID("PPVP");
            msGetGid1 = objcmnfunctions.GetMasterGID("PPTM");


            msSQL = "select product_gid from pmr_mst_tproduct where product_name='" + values.product_name + "'";
            string lsproductgid = objdbconn.GetExecuteScalar(msSQL);

            msSQL = "select productuom_gid from pmr_mst_tproductuom where productuom_name='" + values.productuom_name + "'";
            string lsproductuomgid = objdbconn.GetExecuteScalar(msSQL);
            msSQL = "Select productgroup_gid from pmr_mst_tproductgroup where productgroup_name='" + values.productgroup_name + "'";
            string lsproductgroupgid = objdbconn.GetExecuteScalar(msSQL);

            msSQL = " insert into pmr_tmp_tvendorenquiry( " +
                    " tmpsalesenquiry_gid , " +
                    " productgroup_gid, " +
                    " vendorproduct_code," +
                    " product_gid, " +
                    " potential_value," +
                    " uom_gid," +
                    " qty_requested, " +
                    " user_gid, " +
                    " enquiry_type," +
                    " product_requireddate, " +
                    " product_requireddateremarks," +
                    " display_field) " +
                    " values( " +
                     "'" + msGetGid + "'," +
                    "'" + lsproductgroupgid + "'," +
                    "'" + values.vendorproduct_code + "'," +
                    "'" + lsproductgid + "'," +
                    "'" + values.potential_value + "'," +
                    "'" + lsproductuomgid + "'," +
                    "'" + values.qty_requested + "', " +
                    "'" + user_gid + "', " +
                    "'" + values.enquiry_type + "', " +
                    "'" + values.product_requireddate + "', " +
                    "'" + values.product_requireddateremarks + "'," +
                    "'" + values.display_field + "') ";
            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
            if (mnResult != 0)

            {
                values.status = true;
                values.message = "Product Added Successfully";
            }
            else
            {
                values.status = false;
                values.message = "Error While Adding Product";
            }

        }

        // Currency
        public void DaGetCurrencyDets(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = "select currencyexchange_gid,currency_code from crm_trn_tcurrencyexchange order by currency_code asc ";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetCurrencyDetsDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetCurrencyDetsDropdown

                    {
                        currencyexchange_gid = dt["currencyexchange_gid"].ToString(),
                        currency_code = dt["currency_code"].ToString(),

                    });
                    values.GetCurrencyDets = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }


        // Currency
        public void DaGetBranchDet(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = "select branch_gid, branch_name from hrm_mst_tbranch ";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetBranchDetsDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetBranchDetsDropdown

                    {
                        branch_gid = dt["branch_gid"].ToString(),
                        branch_name = dt["branch_name"].ToString(),

                    });
                    values.GetBranchDet = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }


        //Product for raise quote

        public void DaGetProductDets(MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = "select product_gid,product_name from pmr_mst_tproduct" +
                " where product_name = product_name  and delete_flag='N'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetProductDetDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetProductDetDropdown
                    {
                        product_name = dt["product_name"].ToString(),
                        product_gid = dt["product_gid"].ToString(),
                    });
                    values.GetProductDets = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        // on change product for enquiry to quotation
        public void DaGetOnChangeProductNameDets(string product_gid, MdlPmrTrnRaiseEnquiry values)
        {

            if (product_gid != null)
            {
                msSQL = " Select a.product_name, a.product_code, b.productuom_gid,b.productuom_name,c.productgroup_name,c.productgroup_gid,a.productuom_gid  from pmr_mst_tproduct a  " +
                     " left join pmr_mst_tproductuom b on a.productuom_gid = b.productuom_gid  " +
                    " left join pmr_mst_tproductgroup c on a.productgroup_gid = c.productgroup_gid  " +
                " where a.product_gid='" + product_gid + "' ";
                dt_datatable = objdbconn.GetDataTable(msSQL);

                var getModuleList = new List<GetProductNameDetsDropdown>();
                if (dt_datatable.Rows.Count != 0)
                {
                    foreach (DataRow dt in dt_datatable.Rows)
                    {
                        getModuleList.Add(new GetProductNameDetsDropdown
                        {
                            product_name = dt["product_name"].ToString(),
                            product_code = dt["product_code"].ToString(),
                            productuom_name = dt["productuom_name"].ToString(),
                            productgroup_name = dt["productgroup_name"].ToString(),
                            productuom_gid = dt["productuom_gid"].ToString(),
                            productgroup_gid = dt["productgroup_gid"].ToString(),

                        });
                        values.GetProductNameDets = getModuleList;
                    }
                }
            }
            else
            {

            }
        }

        // Tax 1
        public void DaGetFirstTax(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = " select tax_name,tax_gid,percentage from acp_mst_ttax where active_flag='Y' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetFirsttaxDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetFirsttaxDropdown

                    {
                        tax_gid = dt["tax_gid"].ToString(),
                        tax_name = dt["tax_name"].ToString(),
                        percentage = dt["percentage"].ToString()

                    });
                    values.GetFirstTax = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        // Tax 2
        public void DaGetSecondTax(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = " select tax_name,tax_gid,percentage from acp_mst_ttax where active_flag='Y' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetSecondtaxDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetSecondtaxDropdown

                    {
                        tax_gid2 = dt["tax_gid"].ToString(),
                        tax_name2 = dt["tax_name"].ToString(),
                        percentage = dt["percentage"].ToString()


                    });
                    values.GetSecondTax = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        // Tax 3
        public void DaGetThirdTax(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = " select tax_name,tax_gid,percentage from acp_mst_ttax where active_flag='Y' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetThirdtaxDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetThirdtaxDropdown

                    {
                        tax_gid3 = dt["tax_gid"].ToString(),
                        tax_name3 = dt["tax_name"].ToString(),
                        percentage = dt["percentage"].ToString()


                    });
                    values.GetThirdTax = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        // Tax 4
        public void DaGetFourthTax(MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = " select tax_name,tax_gid,percentage from acp_mst_ttax where active_flag='Y' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetFourthtaxDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetFourthtaxDropdown

                    {
                        tax_gid4 = dt["tax_gid"].ToString(),
                        tax_name4 = dt["tax_name"].ToString(),
                        percentage = dt["percentage"].ToString()

                    });
                    values.GetFourthTax = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }


        public void DaGetTerms(MdlPmrTrnRaiseEnquiry values)

        {


            msSQL = "  select a.template_gid, c.template_name, c.template_content from adm_trn_ttemplate2module a " +

             " left join adm_mst_tmodule b on a.module_gid = b.module_gid " +

             " left join adm_mst_ttemplate c on a.template_gid = c.template_gid " +

             " left join adm_mst_ttemplatetype d on c.templatetype_gid = d.templatetype_gid " +

             " where a.module_gid = 'SMR' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);

            var getModuleList = new List<GetTermsDropdown>();

            if (dt_datatable.Rows.Count != 0)

            {

                foreach (DataRow dt in dt_datatable.Rows)

                {

                    getModuleList.Add(new GetTermsDropdown

                    {

                        template_gid = dt["template_gid"].ToString(),

                        template_name = dt["template_name"].ToString(),

                        template_content = dt["template_content"].ToString()


                    });

                    values.terms_lists = getModuleList;

                }

            }

            dt_datatable.Dispose();

        }

       

        public void DaGetVendorName(MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = "  Select a.vendor_companyname,a.vendorregister_gid,a.email_id,a.contactperson_name,a.contact_telephonenumber," +
                    "a.email_id,b.country_gid,b.address1,b.address2,c.country_name,b.city,b.state, b.postal_code,b.branch_name " +
                    "from acp_mst_tvendorregister a" +
                     " left join adm_mst_taddress b on a.address_gid = b.address_gid"+
                     "  left join adm_mst_tcountry c on b.country_gid = c.country_gid "+
                     "where a.active_flag = 'Y'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetVendorname>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetVendorname
                    {
                        vendor_companyname = dt["vendor_companyname"].ToString(),
                        vendor_gid = dt["vendorregister_gid"].ToString(),
                       
                    });
                    values.GetVendor = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetVendorDtl(string vendor_gid, MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = "  Select a.vendor_companyname,a.vendorregister_gid,a.email_id,a.contactperson_name,a.contact_telephonenumber," +
                    "a.email_id,b.country_gid,b.address1,b.address2,c.country_name,b.city,b.state, b.postal_code,b.branch_name " +
                    "from acp_mst_tvendorregister a" +
                     " left join adm_mst_taddress b on a.address_gid = b.address_gid" +
                     "  left join adm_mst_tcountry c on b.country_gid = c.country_gid where vendorregister_gid='" + vendor_gid + "'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetVendorraise>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetVendorraise
                    {
                        vendor_companyname = dt["vendor_companyname"].ToString(),
                        vendor_gid = dt["vendorregister_gid"].ToString(),
                        email_id = dt["email_id"].ToString(),
                        contactperson_name = dt["contactperson_name"].ToString(),
                        contact_telephonenumber = dt["contact_telephonenumber"].ToString(),
                        country_gid = dt["country_gid"].ToString(),
                        address1 = dt["address1"].ToString(),
                        country_name = dt["country_name"].ToString(),
                        address2 = dt["address2"].ToString(),
                        city = dt["city"].ToString(),
                        state = dt["state"].ToString(),
                        postal_code = dt["postal_code"].ToString(),
                        vendorbranch_name = dt["branch_name"].ToString(),
                    });
                    values.GetVendorlist = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetEmployeePerson(string employee_gid, MdlPmrTrnRaiseEnquiry values)
        {


            msSQL = " select a.*, concat(b.user_firstname, '-', b.user_code) as user,c.employee_gid, b.user_firstname from adm_mst_tmodule2employee a  " +
                    " inner join hrm_mst_temployee c on a.employee_gid = c.employee_gid" +
                    " inner join adm_mst_tuser b on c.user_gid = b.user_gid" +
                    " where a.module_gid = 'SMR'" +
                   " and a.employeereporting_to = '" + employee_gid + "' ";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetAssignDropdown>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetAssignDropdown

                    {
                        employee_gid = dt["employee_gid"].ToString(),
                        user_firstname = dt["user_firstname"].ToString(),
                       

                    });
                    values.GetEmployeePerson = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaProductsSummary(string user_gid, MdlPmrTrnRaiseEnquiry values)
        {

            msSQL = " select a.tmpsalesenquiry_gid,a.vendorproduct_code,a.qty_requested,a.display_field, " +
                " date_format(a.product_requireddate,'%d-%m-%Y') as product_requireddate, " +
                " d.productgroup_name,b.product_code,b.product_name,c.productuom_name,a.product_gid, " +
                " format(a.potential_value,2)as potential_value,a.product_requireddateremarks " +
                " from pmr_tmp_tvendorenquiry a left join pmr_mst_tproduct b on a.product_gid=b.product_gid " +
                " left join pmr_mst_tproductuom c on a.uom_gid=c.productuom_gid " +
                " left join pmr_mst_tproductgroup d on a.productgroup_gid= d.productgroup_gid" +
                " where a.user_gid='" + user_gid + "'";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<productsummarys_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new productsummarys_list
                    {
                        tmpsalesenquiry_gid = dt["tmpsalesenquiry_gid"].ToString(),
                        vendorproduct_code = dt["vendorproduct_code"].ToString(),
                        qty_requested = dt["qty_requested"].ToString(),
                        product_requireddate = dt["product_requireddate"].ToString(),
                        productgroup_name = dt["productgroup_name"].ToString(),
                        product_code = dt["product_code"].ToString(),
                        product_name = dt["product_name"].ToString(),
                        productuom_name = dt["productuom_name"].ToString(),
                        product_gid = dt["product_gid"].ToString(),
                        potential_value = dt["potential_value"].ToString(),
                        product_requireddateremarks = dt["product_requireddateremarks"].ToString(),


                    });
                    values.productsummarys_list = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }

        public void DaGetDeleteEnquiryProductSummary(string tmpsalesenquiry_gid, productsummarys_list values)
        {
            msSQL = "delete from pmr_tmp_tvendorenquiry where tmpsalesenquiry_gid='" + tmpsalesenquiry_gid + "'  ";
            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
            if (mnResult != 0)
            {
                values.status = true;
                values.message = "Product  Deleted Successfully";
            }
            else
            {
                values.status = false;
                values.message = "Error While Deleting Product";
            }
        }

        public void DaPostVendorEnquiry(string employee_gid, string user_gid, PostAll values)

        {

            msSQL = "SELECT * FROM pmr_tmp_tvendorenquiry WHERE user_gid='" + user_gid + "'";
            dt_datatable = objdbconn.GetDataTable(msSQL);

            if (mnResult != 0)
            {
                values.status = true;
                values.message = "Select one Product to Raise Enquiry";
            }

            msGetGid1 = objcmnfunctions.GetMasterGID("PEYP");

            if (msGetGid1 == "E") // Assuming "E" is a string constant
            {
                values.status = true;
                values.message = "Create Sequence Code PEYP for Sales Enquiry Details";
            }


            msSQL = "SELECT DISTINCT " +
                "a.product_gid, a.product_remarks, a.vendorproduct_code, a.branch_gid,a.potential_value," +
                "a.qty_requested, a.uom_gid, a.display_field, a.product_requireddate, a.product_requireddateremarks, " +
                "a.productgroup_gid" +
                " FROM pmr_tmp_tvendorenquiry a WHERE" +
                " a.user_gid = '" + user_gid + "'";

            dt_datatable = objdbconn.GetDataTable(msSQL);

            if (dt_datatable.Rows.Count != 0) 
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    msGetGid = objcmnfunctions.GetMasterGID("PEDC");

                    if (msGetGid == "E") // Assuming "E" is a string constant
                    {
                        values.status = true;
                        values.message = "Create Sequence Code PEDC for Sales Enquiry Details";
                    }

                    string lsnewproduct_flag = "Y";

                    msSQL = " Insert into pmr_trn_tenquirydtl " +
                           " (enquirydtl_gid," +
                           " enquiry_gid , " +
                           " vendorproduct_code," +
                           " product_gid," +
                           " potential_value," +
                           " uom_gid," +
                           " productgroup_gid," +
                           " qty_enquired, " +
                           " newproduct_flag, " +
                           " product_requireddate, " +
                           " product_requireddateremarks," +
                           " display_field ) " +
                           " values (" +
                           "'" + msGetGid + "'," +
                           "'" + msGetGid1 + "'," +
                           "'" + dt["vendorproduct_code"].ToString() + "'," +
                           "'" + dt["product_gid"].ToString() + "'," +
                           "'" + dt["potential_value"].ToString() + "'," +
                           "'" + dt["uom_gid"].ToString() + "'," +
                           "'" + dt["productgroup_gid"].ToString() + "'," +
                           "'" + dt["qty_requested"].ToString() + "', " +
                           "'" + lsnewproduct_flag + "', ";

                    if (dt["product_requireddate"].ToString() == null || DBNull.Value.Equals(dt["product_requireddate"].ToString()))
                    {
                        msSQL += "null,";
                    }
                    else
                    {
                        string formattedDate = ((DateTime)dt["product_requireddate"]).ToString("yyyy-MM-dd");
                        msSQL += "'" + formattedDate + "',";
                    }
                    msSQL += "'" + dt["product_requireddateremarks"].ToString() + "',";
                    msSQL += "'" + dt["display_field"].ToString() + "')";

                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);


                    //        if (mnResult != 0)
                    //        {
                    //            msSQL = "INSERT INTO pmr_trn_tenquiry " +
                    //                    "(enquiry_gid, " +
                    //                    "branch_gid, " +
                    //                    "vendor_gid, " +
                    //                    "contact_number, " +
                    //                    "contact_email, " +
                    //                    "vendor_contact_person, " +
                    //                    "vendor_address, " +
                    //                    "enquiry_date, " +
                    //                    "enquiry_remarks, " +
                    //                    "enquiry_status, " +
                    //                    "enquiry_referencenumber, " +
                    //                    "created_by, " +
                    //                    "created_date, " +
                    //                    "vendor_requirement, " +
                    //                    "assigned_by, " +
                    //                    "closure_date, " +
                    //                    "enquiry_flag, " +
                    //                    " product_requireddate, " +
                    //                    " product_requireddateremarks," +
                    //                    " display_field ) " +
                    //                    "VALUES (" +
                    //                    "'" + msGetGid + "'," +
                    //                    "'" + values.vendorbranch_name + "'," +
                    //                    "'" + values.vendor_gid + "'," +
                    //                    "'" + values.contact_telephonenumber + "'," +
                    //                    "'" + values .email_id+ "'," +
                    //                    "'" + values.contactperson_name + "'," +
                    //                    "'" + values.address1 + "'," +
                    //                    "'" + values.enquiry_date + "'," +
                    //                    "'" + values.enquiry_remarks+ "'," +
                    //                    "'Direct Enquiry completed'," +
                    //                    "'" + values.enquiry_referencenumber + "'," +
                    //                    "'" + user_gid + "'," +
                    //                    "'" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "'," +
                    //                    "'" + values.vendor_requirement + "'," +
                    //                      "'" + values.user_firstname + "'," +
                    //                    "'" + values.closure_date.ToString("yyyy-MM-dd HH:mm:ss") + "'," +
                    //                    "'Direct Enquiry completed',"; 


                    //            if (dt["product_requireddate"].ToString() == null || DBNull.Value.Equals(dt["product_requireddate"].ToString()))
                    //            {
                    //                msSQL += "null";
                    //            }
                    //            else
                    //            {
                    //                string formattedDate = ((DateTime)dt["product_requireddate"]).ToString("yyyy-MM-dd");
                    //                msSQL += "'" + formattedDate + "',";
                    //            }
                    //            msSQL += "'" + values.product_requireddateremarks + "',";
                    //            msSQL += "'" + values.display_field + "')";
                    //        }
                    //        mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                }
            }
            //else
            //{
            //    values.message = "Please add the product to raise enquiry";
            //}
            if (mnResult == 1)
            {
                string lsenquiry_status = "Enquiry Raised";
                string lsenquiry_flag = "PR Pending Approval";
                //string lspurchaseenquiry_flag = "Enquiry Raised";
                string lslead_status = "Assigned";

                //msSQL = "select sum(potential_value) as potential_value from pmr_tmp_tvendorenquiry where enquiry_gid='" + msGetGid1 + "'";
                //objMySqlDataReader = objdbconn.GetDataReader(msSQL);
                //if (objMySqlDataReader.HasRows == true)
                //{
                //    lspotential_value = objMySqlDataReader["potential_value"].ToString();

                //}


                //msSQL = " select customer_gid from crm_trn_tleadbank where leadbank_gid='" + values.customer_gid + "' ";
                //lsleadbank_gid = objdbconn.GetExecuteScalar(msSQL);

                msSQL = "INSERT INTO pmr_trn_tenquiry " +
                                               "(enquiry_gid, " +
                                               "branch_gid, " +
                                               "branch_name, " +
                                               "vendor_gid, " +
                                               "contact_number, " +
                                               "vendor_companyname, " +
                                               "contact_email, " +
                                               "vendor_contact_person, " +
                                               "vendor_address, " +
                                               "enquiry_date, " +
                                               "enquiry_remarks, " +
                                               "enquiry_status, " +
                                               "enquiry_referencenumber, " +
                                               "created_by, " +
                                               "created_date, " +
                                               "vendor_requirement, " +
                                               "customer_rating, " +
                                                "assigned_by, " +
                                               "closure_date, " +
                                               "enquiry_flag ) " +
                                               "VALUES (" +
                                               "'" + msGetGid1 + "'," +
                                               "'" + values.branch_name + "'," +
                                                "'" + values.branch_gid + "'," +
                                               "'" + values.vendor_gid + "'," +
                                               "'" + values.contact_telephonenumber + "'," +
                                               "'" + values.vendor_companyname + "'," +
                                               "'" + values.email_id + "'," +
                                               "'" + values.contactperson_name + "'," +
                                               "'" + values.address1 + "'," +
                                               "'" + values.enquiry_date + "'," +
                                               "'" + values.enquiry_remarks + "'," +
                                                "'" + lsenquiry_status + "'," +
                                               "'" + values.enquiry_referencenumber + "'," +
                                               "'" + user_gid + "'," +
                                               "'" + DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") + "'," +
                                               "'" + values.vendor_requirement + "'," +
                                               "'" + values.customer_rating + "'," +
                                                 "'" + values.user_firstname + "'," +
                                               "'" + values.closure_date.ToString("yyyy-MM-dd HH:mm:ss") + "'," +
                                                "'" + lsenquiry_flag + "')";



            mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);


                //if (mnResult != 0)
                //{


                //    msSQL = " Insert into acp_trn_tenquiry " +
                //    " (enquiry_gid, " +
                //    " branch_gid, " +
                //    " leadbank_gid, " +
                //    " customer_gid," +
                //    " customer_name, " +
                //    " contact_number, " +
                //    " contact_person, " +
                //    " contact_email, " +
                //    " customerbranch_gid," +
                //    " contact_address, " +
                //    " enquiry_date, " +
                //    " enquiry_remarks, " +
                //    " enquiry_status, " +
                //    " enquiry_referencenumber, " +
                //    " customer_requirement," +
                //    " landmark," +
                //    " created_by, " +
                //    " created_date, " +
                //    " purchaseenquiry_flag, " +
                //    " enquiry_assignedby, " +
                //    " product_count)" +
                //    " values (" +
                //    "'" + msGetGid1 + "', " +
                //    "'" + values.branch_name + "'," +
                //    "'" + lscustomer_gid + "'," +
                //    "'" + values.customer_gid + "'," +
                //    "'" + values.customer_name + "'," +
                //    "'" + values.contact_number + "'," +
                //    "'" + values.contact_person + "'," +
                //    "'" + values.contact_email + "'," +
                //    "'" + values.customerbranch_name + "'," +
                //    "'" + values.contact_address + "'," +
                //    "'" + values.enquiry_date + "', " +
                //    "'" + values.enquiry_remarks + "', " +
                //    "' " + lsenquiry_status + "'," +
                //    "'" + values.enquiry_referencenumber + "', " +
                //    "'" + values.customer_requirement + "'," +
                //    "'" + values.landmark + "'," +
                //    "'" + employee_gid + "', " +
                //    "'" + DateTime.Now.ToString("yyyy-MM-dd  HH:mm:ss") + "', " +
                //    "' " + lsenquiry_flag + "', " +
                //    "'" + employee_gid + "', " +
                //    "'" + dt_datatable.Rows.Count + "')";

                //    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                //}

                //if (mnResult != 0)
                //{
                //    msSQL = "select distinct enquiry_type from smr_tmp_tsalesenquiry where user_gid='" + employee_gid + "' ";
                //    objMySqlDataReader = objdbconn.GetDataReader(msSQL);

                //    if (objMySqlDataReader.HasRows == true)
                //    {

                //        while (objMySqlDataReader.Read())
                //        {
                //            if (string.IsNullOrWhiteSpace(lstype1))
                //            {
                //                lstype1 = objMySqlDataReader["enquiry_type"].ToString();
                //            }
                //            else
                //            {
                //                if (lstype1 == objMySqlDataReader["enquiry_type"].ToString())
                //                {
                //                    lstype1 = objMySqlDataReader["enquiry_type"].ToString();
                //                }
                //                else
                //                {
                //                    lstype1 = "Both";
                //                }
                //            }
                //        }
                //    }
                //}


                //string lslead = "Open";

                //msSQL = " update smr_trn_tsalesenquiry set enquiry_type='" + lstype1 + "' where enquiry_gid='" + msGetGid1 + "' ";
                //mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                //msSQL = " update acp_trn_tenquiry set enquiry_type='" + lstype1 + "' where enquiry_gid='" + msGetGid1 + "' ";
                //mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                //if (msgetlead2campaign_gid == "E")
                //{

                //    values.status = true;
                //    values.message = "Create sequence code BLCC for Enquiry to campaign ";
                //}

                //msSQL = " Insert into crm_trn_tenquiry2campaign ( " +
                //                            " lead2campaign_gid, " +
                //                            " enquiry_gid, " +
                //                            " created_by, " +
                //                            " created_date, " +
                //                            " lead_status, " +
                //                            " customer_rating, " +
                //                            " leadstage_gid, " +
                //                            " campaign_gid," +
                //                            " assign_to ) " +
                //                            " Values ( " +
                //                            "'" + msgetlead2campaign_gid + "'," +
                //                            "'" + msGetGid1 + "'," +
                //                            "'" + user_gid + "'," +
                //                            "'" + DateTime.Now.ToString("yyyy-MM-dd") + "'," +
                //                            "' " + lslead + " '," +
                //                            "'" + values.customer_rating + "'," +
                //                            "'1', " +
                //                            "'" + lscampaign_gid + "'," +
                //                            "'" + values.user_firstname + "')";
                //mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                //msSQL = " update smr_trn_tsalesenquiry Set " +
                //           " lead_status = '" + lslead_status + "' " +
                //           " where enquiry_gid = '" + msGetGid1 + "' ";
                //mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                //msSQL = " select customer_gid from crm_trn_tleadbank " +
                //        " where leadbank_gid='" + lscustomer_gid + "'";
                //dt_datatable = objdbconn.GetDataTable(msSQL);



                //if (dt_datatable.Rows.Count != 0)
                //{
                //    foreach (DataRow dtRow in dt_datatable.Rows)
                //    {
                //        if (DBNull.Value.Equals(dtRow["customer_gid"]))
                //        {
                //            lsleadstage = "6";
                //        }
                //        else
                //        {
                //            msSQL = " select enquiry_gid from smr_trn_tsalesenquiry" + " where customer_gid='" + values.customer_gid + "'";
                //            dt_datatable = objdbconn.GetDataTable(msSQL);
                //            if (dt_datatable.Rows.Count != 0)
                //            {
                //                lsleadstage = "3";
                //            }

                //        }


                //        msSQL = " update crm_trn_tlead2campaign " +
                //                                       " set leadstage_gid='" + lsleadstage + "'" +
                //                                       " where leadbank_gid='" + lscustomer_gid + "'";
                //        mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                //    }

                //    msSQL = " delete from smr_tmp_tsalesenquiry " +
                //            " where user_gid = '" + user_gid + "'";
                //    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                //}

                //if (mnResult != 0)
                //{
                //    string msgetlead2campaign_gid = objcmnfunctions.GetMasterGID("BLCC");

                //    msSQL = " Insert into crm_trn_tenquiry2campaign ( " +
                //                            " lead2campaign_gid, " +
                //                            " enquiry_gid, " +
                //                            " created_by, " +
                //                            " created_date, " +
                //                            " lead_status, " +
                //                            " customer_rating, " +
                //                            " leadstage_gid, " +
                //                            " campaign_gid," +
                //                            " assign_to ) " +
                //                            " Values ( " +
                //                            "'" + msgetlead2campaign_gid + "'," +
                //                            "'" + msGetGid1 + "'," +
                //                            "'" + values.employee_gid + "'," +
                //                            "'" + DateTime.Now.ToString("yyyy-MM-dd") + "'," +
                //                            "'" + lslead + "'," +
                //                            "'" + values.customer_rating + "'," +
                //                            "'1', " +
                //                            "'" + lscampaign_gid + "'," +
                //                            "'" + values.user_firstname + "')";
                //    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);

                //    msSQL = " update smr_trn_tsalesenquiry Set " +
                //               " lead_status = '" + lslead_status + "' " +
                //               " where enquiry_gid = '" + msGetGid1 + "' ";
                //    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);
                //}

                //objdbconn.CloseConn();
                //objMySqlDataReader.Close();

                if (mnResult != 0)
                {
                    values.status = true;
                    values.message = "Enquiry Raised Successfully";
                    msSQL = " delete from pmr_tmp_tvendorenquiry " +
                            " where user_gid = '" + user_gid + "'";
                    mnResult = objdbconn.ExecuteNonQuerySQL(msSQL);


                }
                else
                {
                    values.status = false;
                    values.message = "Error While Raising Enquiry";
                }
            }
        }


        public void DaGetVendorEnquirySummary (MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = "select  a.enquiry_gid as enquiry_refno,a.enquiry_date,a.enquiry_referencenumber,f.branch_name,a.vendor_address,a.enquiry_status,a.vendor_gid," +
                   "  a.assigned_by,a.created_by,d.potential_value,a.customer_rating,a.created_date,b.vendorproduct_code,e.user_firstname,c.vendor_companyname from pmr_trn_tenquiry a " +
                   " left join pmr_trn_tenquirydtl b on a.enquiry_gid = b.enquiry_gid " +
                   " left join acp_mst_tvendorregister c on a.vendor_gid = c.vendorregister_gid " +
                   "  left join pmr_tmp_tvendorenquiry d on b.product_gid = d.product_gid "+
                   " left join hrm_mst_tbranch f on a.branch_gid = f.branch_gid "+
                   " left join adm_mst_tuser e on a.created_by= e.user_gid " +
                   " where 1=1 order by enquiry_date desc ";
            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<GetCusEnquiry>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new GetCusEnquiry
                    {
                        enquiry_gid = dt["enquiry_refno"].ToString(),
                        enquiry_date = Convert.ToDateTime(dt["enquiry_date"]).ToString("yyyy-MM-dd"),
                        enquiry_refno = dt["enquiry_refno"].ToString(),
                        branch_name = dt["branch_name"].ToString(),
                        branch_gid = dt["branch_name"].ToString(),
                        vendor_name = dt["vendor_companyname"].ToString(),
                        created_date = dt["created_date"].ToString(),
                        enquiry_referencenumber = dt["enquiry_referencenumber"].ToString(),
                        contact_details = dt["vendor_address"].ToString(),
                        potorder_value = dt["potential_value"].ToString(),
                        enquiry_status = dt["enquiry_status"].ToString(),
                        vendor_rating = dt["customer_rating"].ToString(),
                        created_by = dt["user_firstname"].ToString(),
                        assigned_by = dt["assigned_by"].ToString(),

                    });
                    values.cusenquiry_list = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
        public void Daviewvendorenquiry(string enquiry_gid, MdlPmrTrnRaiseEnquiry values)
        {
            msSQL = " select a.enquiry_gid,a.enquiry_date,b.branch_gid,b.branch_name,a.enquiry_referencenumber,a.vendor_companyname,a.vendor_contact_person,a.contact_number,a.contact_email,a.vendor_address,a.closure_date,c.productgroup_name,d.productuom_name,e.product_requireddate,e.potential_value,e.vendorproduct_code,e.qty_enquired,f.product_name,f.product_code from pmr_trn_tenquiry a " + 
                " left join hrm_mst_tbranch b on b.branch_gid= a.branch_gid" +
                " left join pmr_trn_tenquirydtl e on e.enquiry_gid = a.enquiry_gid" +
                " left join pmr_mst_tproduct f on f.product_gid = e.product_gid" +
                " left join pmr_mst_tproductuom d on d.productuom_gid = f.productuom_gid" +
                " left join pmr_mst_tproductgroup c on c.productgroup_gid = e.productgroup_gid" +
                " where a.enquiry_gid='"+ enquiry_gid +"'";

            dt_datatable = objdbconn.GetDataTable(msSQL);
            var getModuleList = new List<viewvendorenquiry_list>();
            if (dt_datatable.Rows.Count != 0)
            {
                foreach (DataRow dt in dt_datatable.Rows)
                {
                    getModuleList.Add(new viewvendorenquiry_list
                    {
                        enquiry_gid = dt["enquiry_gid"].ToString(),
                        enquiry_date = Convert.ToDateTime(dt["enquiry_date"]).ToString("dd-MM-yyyy"),
                        branch_name = dt["branch_name"].ToString(),
                        branch_gid = dt["branch_name"].ToString(),
                        enquiry_referencenumber = dt["enquiry_referencenumber"].ToString(),
                        vendor_companyname = dt["vendor_companyname"].ToString(),
                        contact_number = dt["contact_number"].ToString(),
                        vendor_contact_person = dt["vendor_contact_person"].ToString(),
                        contact_email = dt["contact_email"].ToString(),
                        vendor_address = dt["vendor_address"].ToString(),
                        closure_date = Convert.ToDateTime(dt["closure_date"]).ToString("dd-MM-yyyy"),
                        productgroup_name = dt["productgroup_name"].ToString(),
                        vendorproduct_code = dt["vendorproduct_code"].ToString(),
                        product_code = dt["product_code"].ToString(),
                        product_name = dt["product_name"].ToString(),
                        productuom_name = dt["productuom_name"].ToString(),
                        qty_enquired = dt["qty_enquired"].ToString(),
                        potential_value = dt["potential_value"].ToString(),
                        product_requireddate = dt["product_requireddate"].ToString()
                    });
                    values.viewvendorenquiry_list = getModuleList;
                }
            }
            dt_datatable.Dispose();
        }
    }
}
